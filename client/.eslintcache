[{"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\index.js":"1","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\App.js":"2","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\Header.js":"4","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\auth-header.js":"5","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\router\\AppRouter.js":"6","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\auth.service.js":"7","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\Accueil.js":"8","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\MessageError.js":"9","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\router\\PrivateRoute.js":"10","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\UpdateEvent.js":"11","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\SeeEvent.js":"12","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AddEvent.js":"13","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AllEvents.js":"14","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\DeleteEvent.js":"15","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\CreatedEvents.js":"16","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AddDanseType.js":"17","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\CancelEvent.js":"18","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\users\\Register.js":"19","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\ParticipateEvents.js":"20","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\UsersProfile.js":"21","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\users\\Login.js":"22","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\Profile.js":"23","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\AddGroupe.js":"24","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\EditProfile.js":"25","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\AllGroupes.js":"26","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\UpdateGroupe.js":"27","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\ListMembres.js":"28","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\Post.js":"29","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\publication-service.js":"30","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\pagination.js":"31","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\invite-service.js":"32","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\rates\\RateCard.js":"33"},{"size":650,"mtime":1614441332000,"results":"34","hashOfConfig":"35"},{"size":174,"mtime":1614441332000,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1614441332000,"results":"37","hashOfConfig":"35"},{"size":8643,"mtime":1614694470917,"results":"38","hashOfConfig":"35"},{"size":211,"mtime":1614611891952,"results":"39","hashOfConfig":"35"},{"size":2847,"mtime":1614441332000,"results":"40","hashOfConfig":"35"},{"size":1620,"mtime":1614523266454,"results":"41","hashOfConfig":"35"},{"size":4612,"mtime":1614613457223,"results":"42","hashOfConfig":"35"},{"size":171,"mtime":1614441332000,"results":"43","hashOfConfig":"35"},{"size":708,"mtime":1614441332000,"results":"44","hashOfConfig":"35"},{"size":3910,"mtime":1614441332000,"results":"45","hashOfConfig":"35"},{"size":11648,"mtime":1614687645034,"results":"46","hashOfConfig":"35"},{"size":4550,"mtime":1614591005154,"results":"47","hashOfConfig":"35"},{"size":9292,"mtime":1614441332000,"results":"48","hashOfConfig":"35"},{"size":1498,"mtime":1614441332000,"results":"49","hashOfConfig":"35"},{"size":10563,"mtime":1614441332000,"results":"50","hashOfConfig":"35"},{"size":946,"mtime":1614441332000,"results":"51","hashOfConfig":"35"},{"size":1977,"mtime":1614441332000,"results":"52","hashOfConfig":"35"},{"size":3596,"mtime":1614441332000,"results":"53","hashOfConfig":"35"},{"size":3803,"mtime":1614441332000,"results":"54","hashOfConfig":"35"},{"size":7047,"mtime":1614441332000,"results":"55","hashOfConfig":"35"},{"size":2652,"mtime":1614614431881,"results":"56","hashOfConfig":"35"},{"size":6898,"mtime":1614678706534,"results":"57","hashOfConfig":"35"},{"size":4899,"mtime":1614441332000,"results":"58","hashOfConfig":"35"},{"size":8285,"mtime":1614441332000,"results":"59","hashOfConfig":"35"},{"size":2532,"mtime":1614441332000,"results":"60","hashOfConfig":"35"},{"size":2597,"mtime":1614441332000,"results":"61","hashOfConfig":"35"},{"size":5016,"mtime":1614441332000,"results":"62","hashOfConfig":"35"},{"size":2150,"mtime":1614608741333,"results":"63","hashOfConfig":"35"},{"size":4360,"mtime":1614611802891,"results":"64","hashOfConfig":"35"},{"size":1251,"mtime":1614441332000,"results":"65","hashOfConfig":"35"},{"size":5784,"mtime":1614441332000,"results":"66","hashOfConfig":"35"},{"size":3982,"mtime":1614694184950,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1eriuw9",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"154","usedDeprecatedRules":"70"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\index.js",[],["157","158"],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\App.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\Header.js",["159","160","161","162","163","164","165","166","167","168","169","170","171"],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\auth-header.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\router\\AppRouter.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\auth.service.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\Accueil.js",["172","173","174","175","176"],"import { useState, useEffect } from 'react';\nimport { logout } from './services/auth.service'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport authHeader from './services/auth-header'\nimport { AllPublications } from './services/publication-service'\nimport addImage from './../images/addImage.png'\nimport addVideo from './../images/addVideo.png'\n\n\nconst Accueil = (props) => {\n\n  const API_URL = process.env.REACT_APP_API_URL_USER\n  const API_URL_2 = process.env.REACT_APP_API_URL_PUBLICATION\n\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    bornDate: new Date(),\n    gendre: 'F',\n    bio: '',\n    country: '',\n    style: '',\n    image: ''\n  })\n\n  const [feed, setFeed] = useState([])\n\n  const [publication,setPublication] = useState ({\n    content :'',\n    video : ''\n  })\n\n  const [publicationImage , setPublicationImage] = useState({name:\"\"})\n\n  const [isOpened, setIsOpened] = useState(false);\n\n  const formData = new FormData()\n\n  const getUser = async () => {\n    try {\n      const user = await axios.get(API_URL + 'me', { headers: authHeader() })\n      setUser(user.data);\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFeedContent = async () => {\n    try {\n      const publications = await axios.get(API_URL_2 + 'feed', { headers: authHeader() });\n      setFeed(publications.data);\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const likePublication = async (_id) => {\n    try {\n      await axios.post(API_URL_2 + \"addLike/\" + _id, {}, { headers: authHeader() });\n      getFeedContent()\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const unLikePublicaton = async (_id) => {\n    try {\n      await axios.post(API_URL_2 + \"removeLike/\" + _id, {}, { headers: authHeader() });\n      getFeedContent();\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const addPublication = async (e) => {\n    e.preventDefault();\n    try {\n      formData.append('content',publication.content);\n      if(publicationImage.name)\n        formData.append('image',publicationImage)\n      await axios.post(API_URL_2 + 'addPublication', formData, { headers: authHeader() })\n      const publidata = await axios.get(API_URL_2 + 'myPublications',{ headers: authHeader() })\n      setFeed(publidata.data);\n      toggle()\n    } catch (e) {\n      console.log(e);\n    }\n  }   \n\n  const onChangeEvent = (e) => {\n    setPublication({ ...publication, [e.target.name]: e.target.value })\n  }\n\n  const onChangeImage = (e) => {\n    setPublicationImage(e.target.files[0])\n  }\n\n  function toggle() {\n    setIsOpened(wasOpened => !wasOpened);\n  } \n\n\n\n  useEffect(() => {\n    getUser();\n    getFeedContent();\n  }, [])\n\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-3 offset-md-9\">\n          <button className=\"btn btn-success\" onClick={toggle}> Écrire une publication </button>\n        </div>\n\n        {isOpened && (\n          <div className=\"col-md-8 offset-md-2\">\n            <form onSubmit={addPublication}>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"content\"> Que souhaitez-vous dire à vos amis ?</label>\n                <textarea className=\"form-control\" type=\"text\" id=\"content\" name=\"content\" onChange={onChangeEvent} required />\n              </div>\n\n              <div className=\"form-row mt-2 image-upload\">\n                <div className=\"col image-upload\">\n                  <label for=\"imageFile\">\n                    <img src={addImage} className=\"iconimage\" />\n                  </label>\n                  <input id=\"imageFile\" type=\"file\" onChange={onChangeImage} />\n                </div>\n\n                <div className=\"col image-upload\">\n                  <label for=\"videoFile\">\n                    <img src={addVideo} className=\"iconimage\" />\n                  </label>\n                  <input id=\"videoFileFile\" type=\"file\" />\n                </div>\n\n              </div>\n              <input type=\"submit\" value=\"Ajouter ma publication\" className=\"btn btn-primary\" />\n            </form>\n          </div>\n        )}\n      </div>\n      <div className=\"ProfilContent\">\n        <br />\n        <div className=\"ProfilPosts\">\n          {feed ?\n            <AllPublications publications={feed} user={user} isContent={true} likePublication={likePublication} unLikePublicaton={unLikePublicaton} />\n            :\n            (<div>\n              <h1>Encore aucune publication</h1>\n              <h2>Commencer par vous abonnez à des danseurs !!</h2>\n            </div>)\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default Accueil;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\MessageError.js",["177"],"import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1>Error 404</h1>\n            <h2>Page not found</h2>\n        </div>\n    );\n};\n\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\router\\PrivateRoute.js",["178","179","180","181"],"import React, {useState, useEffect} from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport Accueil from '../Accueil'\nimport Header from '../Header'\nimport { getCurrentUser } from '../services/auth.service'\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                getCurrentUser() ? (\n                    <div>\n                        <Component {...props} />\n                    </div>\n                ) : (\n                        <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                    )\n            }\n        />\n    )\n}\n\nexport default PrivateRoute;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\UpdateEvent.js",["182","183","184"],"import React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport DatePicker from 'react-datepicker'\nimport axios from \"axios\"\nimport authHeader from '../services/auth-header';\n\nconst UpdateEvent = (props) => {\n\n  const API_URL = process.env.REACT_APP_API_URL_EVENT\n\n  const [event, setEvent] = useState({\n    name: '',\n    eventId: '',\n    place: '',\n    city: '',\n    postcode: 0,\n    description: '',\n    hour: '',\n    date: 'moment().format(\"DD-MM-YYYY hh:mm:ss\")'\n  })\n  const formData = new FormData()\n\n  const getEvent = async()=>{\n    try {\n      const _id = props.match.params.eventId\n      const eventData = await axios.get(API_URL + \"getEvent/\" + _id, { headers: authHeader() });\n      setEvent(eventData.data)\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect( () => {\n      getEvent();\n  }, [])\n\n  const onChangeEvent = (e) => {\n    setEvent({ ...event, [e.target.name]: e.target.value });\n  }\n\n  const onChangeImage = (e) => {\n    formData.append('image',e.target.files[0])\n  }\n\n  const handleEventUpdate = async (e) => {\n    e.preventDefault()\n    try {\n      const _id = props.match.params.eventId\n      formData.append('_id', _id);\n      formData.append('name',event.name);\n      formData.append('place',event.place);\n      formData.append('city',event.city);\n      formData.append('postcode', event.postcode);\n      formData.append('description', event.description);\n      formData.append('date', event.date);\n      formData.append('hour',event.hour);\n      await axios.post(API_URL + 'update', formData, { headers: authHeader() })\n      props.history.push('/allEvents')\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n      <h1> Modification de l'événement { event.name } </h1>\n      <form onSubmit={ handleEventUpdate }>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Nom</label>\n          <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" value={event.name} onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"place\"> Lieu </label>\n          <input className=\"form-control\" type=\"text\" id=\"place\" name=\"place\" value={event.place} onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"city\"> Ville </label>\n          <input type=\"text\" id=\"city\" name=\"city\" className=\"form-control\" value={event.city} onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"postcode\"> Code postal </label>\n          <input type=\"numer\" id=\"postcode\" name=\"postcode\" className=\"form-control\" value={event.postcode} onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\"> Description </label>\n          <textarea id=\"description\" name=\"description\" className=\"form-control\" value={event.description} onChange={onChangeEvent} required> </textarea>\n        </div>\n\n        <div className=\"form-row mb-2\">\n          <div className=\"col\">\n            <label htmlFor=\"date\"> Date </label>\n            <input type=\"date\" id=\"date\" name=\"date\" className=\"form-control\" value={event.date} onChange={onChangeEvent} value={moment(event.date).format(\"YYYY-MM-DD\")} required />\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"hour\"> Heure </label>\n            <input type=\"time\" id=\"hour\" name=\"hour\" className=\"form-control\" onChange={ onChangeEvent } defaultValue={event.hour} />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"image\"> Image </label>\n          <input type=\"file\" id=\"image\" name=\"image\" className=\"form-control\" onChange={onChangeImage} />\n        </div>\n\n\n        <input type=\"submit\" value=\"Envoyer\" />\n      </form>\n    </div>\n  );\n\n}\n\nexport default UpdateEvent;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\SeeEvent.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AddEvent.js",["202","203"],"\nimport React, { useState,useEffect } from 'react';\nimport moment from \"moment\";\nimport authHeader from '../services/auth-header'\nimport axios from 'axios'\n\n\nconst AddEvent = (props) => {\n\n  const API_URL = process.env.REACT_APP_API_URL_EVENT\n  const API_URL2 = process.env.REACT_APP_API_URL_TYPE\n\n\n  const [event, setEvent] = useState(\n    {\n      name: '',\n      eventId: '',\n      place: '',\n      city: '',\n      postcode: 0,\n      description: '',\n      hour: '',\n      type: '',\n      date: 'moment().format(\"DD-MM-YYYY hh:mm:ss\")'\n    })\n\n  const [errorMessage, setErrorMessage] = useState('')\n  const formData = new FormData()\n  const [types, setTypes] = useState([]);\n\n\n  const onChangeEvent = (e) => {\n    setEvent({ ...event, [e.target.name]: e.target.value })\n  }\n\n  const onChangeImage = (e) => {\n    formData.append('image',e.target.files[0])\n  }\n\n  const getAllType = async () => {\n    const types = await axios.get(API_URL2+'allTypes')\n    setTypes(types.data)\n  }\n\n  const handleAddEvent = async (e) => {\n    e.preventDefault();\n    try {\n      formData.append('name',event.name);\n      formData.append('place',event.place);\n      formData.append('city',event.city);\n      formData.append('postcode', event.postcode);\n      formData.append('description', event.description);\n      formData.append('date', event.date);\n      formData.append('hour',event.hour);\n      formData.append('type',event.type)     \n      await axios.post(API_URL + 'addEvent', formData, { headers: authHeader() })\n      localStorage.setItem(\"setValue\",\"false\")\n      localStorage.setItem(\"searchString\",\" \")\n      localStorage.setItem(\"type\",\" \")\n      props.history.push('/allEvents')\n    } catch (e) {\n      setErrorMessage(e);\n      console.log(e);\n    }\n  }\n\n \n  useEffect(() => {\n    getAllType()\n    console.log(process.env.REACT_APP_SECRET_CODE)\n  }, [])\n\n\n  return (\n    <div>\n      <h1> Ajout d'un événement </h1>\n\n      <form onSubmit={handleAddEvent} encType=\"multipart/form-data\" >\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Nom</label>\n          <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"place\"> Lieu </label>\n          <input className=\"form-control\" type=\"text\" id=\"place\" name=\"place\" onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"city\"> Ville </label>\n          <input type=\"text\" id=\"city\" name=\"city\" className=\"form-control\" onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"postcode\"> Code postal </label>\n          <input type=\"numer\" id=\"postcode\" name=\"postcode\" className=\"form-control\" onChange={onChangeEvent} required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"type\"> Type de danse </label>\n          <select className=\"form-control custom-select\" name=\"type\" id=\"type\" onChange={onChangeEvent}>\n              <option value=\"choix\" disabled selected name=\"type\"> Type de danse de votre événement</option>\n\n              {\n                types.map((type) => {\n                    return (\n                      <option key={type._id} value={type._id} name=\"type\"> {type.name} </option>\n                    )\n                })\n              }\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\"> Description </label>\n          <textarea id=\"description\" name=\"description\" className=\"form-control\" onChange={onChangeEvent} required> </textarea>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <label htmlFor=\"date\"> Date </label>\n            <input type=\"date\" id=\"date\" name=\"date\" className=\"form-control\" onChange={ onChangeEvent } value={moment(event.date).format(\"YYYY-MM-DD\")} required />\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"hour\"> Heure </label>\n            <input type=\"time\" id=\"hour\" name=\"hour\" className=\"form-control\" onChange={onChangeEvent} />\n          </div>\n\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"image\"> Image </label>\n          <input type=\"file\" id=\"image\" name=\"image\" className=\"form-control\" onChange={onChangeImage} />\n        </div>\n\n        <input type=\"submit\" value=\"Envoyer\" className=\"btn btn-primary\" />\n      </form>\n    </div>\n\n  );\n  }\n\nexport default AddEvent;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AllEvents.js",["204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport 'moment/locale/fr';\nimport authHeader from '../services/auth-header';\nimport Accueil from '../Accueil';\nimport {getCurrentUser} from \"../services/auth.service\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faMapMarkerAlt, faCalendarAlt, faUsers } from '@fortawesome/free-solid-svg-icons'\nimport PaginationPage from '../services/pagination'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport {ModalInviteEvent} from \"../services/invite-service\"\n\nconst AllEvents = (props) => {\n\n    const [events, setEvents] = useState([]);\n    const API_URL = process.env.REACT_APP_API_URL_EVENT\n    const API_URL2 = process.env.REACT_APP_API_URL_TYPE\n\n    const [types, setTypes] = useState([]);\n\n   \n    const paticipateToEvent = async (_id) => {\n        try {\n            await axios.post(API_URL + \"participate/\" + _id, { } , { headers: authHeader() })\n            window.location.reload();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getAllType = async () => {\n        const types = await axios.get(API_URL2+'allTypes')\n        setTypes(types.data)\n    }\n\n    const getEvents = async () => {\n        try {\n            const events = await axios.get(API_URL + 'allEvents')\n            page.currentPage = 1\n            page.numberOfEvents = events.data.count\n            if( page.numberOfEvents % page.numberPerPage === 0)\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n            else\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n            setEvents(events.data.events)\n            localStorage.setItem(\"currentPage\",1)\n            localStorage.setItem(\"numberOfEvents\",events.data.count)\n            if(localStorage.getItem(\"setValue\") == null || localStorage.getItem(\"setValue\")===\"false\" )\n                localStorage.setItem(\"setValue\",\"true\")\n            localStorage.setItem(\"type\",\"all\")\n            localStorage.setItem(\"searchString\",\" \")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const [search, setSearch] = useState({\n        searchString: ' ',\n        type :'all'\n    })\n\n    const[page,setPage] = useState({\n        currentPage : 1,\n        numberOfEvents : 0,\n        numberPerPage : 2,\n        numberOfPage : 1\n    })\n\n    const onChangeSearch = (e) => {\n        setSearch({ ...search, [e.target.name]: e.target.value })\n        localStorage.setItem(e.target.name,e.target.value)\n    }\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        if(search.searchString ===\"\" && localStorage.getItem(\"searchString\")===\"\")\n            search.searchString=\" \"\n        else\n            search.searchString = localStorage.getItem(\"searchString\")\n        const events = await axios.get(API_URL + 'allEventSearch/'+search.searchString+\"/\"+search.type, { headers: authHeader() })\n        page.currentPage = 1\n        page.numberOfEvents = events.data.count\n        if( page.numberOfEvents % page.numberPerPage === 0)\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n        else\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n        setEvents(events.data.events)\n        localStorage.setItem(\"searchString\",search.searchString)\n    }\n\n    const reinitialiser = () => {\n        search.searchString=' '\n        search.type='all'\n        localStorage.setItem(\"setValue\",\"false\")\n        localStorage.setItem(\"searchString\",\" \")\n        localStorage.setItem(\"type\",\"all\")\n        getEvents()\n    }\n\n    const displaysearch =() => {\n        if(localStorage.getItem(\"searchString\") != null)\n            return localStorage.getItem(\"searchString\").trim()\n        else\n            return \"\"\n    }\n\n    useEffect(() => {\n        getAllType()\n        if(localStorage.getItem(\"setValue\")!=\"true\")\n            getEvents();\n        else{\n            nextPage(parseInt(localStorage.getItem(\"currentPage\")))\n        }\n    }, [])\n\n    const nextPage = async (number) => {\n        if(search.searchString ===\"\" && localStorage.getItem(\"searchString\")===\"\")\n            search.searchString=\" \"\n        else\n            search.searchString = localStorage.getItem(\"searchString\")\n        search.type=localStorage.getItem(\"type\")\n        const eventsDisplay = await axios.get(API_URL + 'allEventSearch/'+search.searchString+'/'+search.type+\"/\"+number+'/'+page.numberPerPage, { headers: authHeader() })\n        page.currentPage = number\n        page.numberOfEvents = eventsDisplay.data.count\n        if( page.numberOfEvents % page.numberPerPage === 0)\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n        else\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n        localStorage.setItem(\"currentPage\",number)\n        localStorage.setItem(\"numberOfEvents\",eventsDisplay.data.count)\n        setEvents(eventsDisplay.data.events)\n    }\n\n   \n\n    return (\n        <div className=\"row\">\n            <form onSubmit={handleSearch} className=\"col-md-10 example my-5\" >\n                <div className=\"form-row\">\n                    <div className=\"col mb-2\">\n                        <select className=\"form-control\" defaultValue={\"all\"} value={search.type} name=\"type\" id=\"type\" onChange={onChangeSearch}>\n                            <option value=\" \" disabled> Type de danse</option>\n                            <option value=\"all\"> Tout type de danse</option>\n\n                            {\n                                types.map((type) => {\n                                    return (\n                                    <option key={type._id} value={type._id}> {type.name} </option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"col\">\n                        <input className=\"form-control\" type=\"text\" id=\"searchString\" name=\"searchString\" placeholder=\"Rechercher\" onChange={onChangeSearch} value={displaysearch()} />\n                    </div>\n                   \n                </div>\n                <button className=\"btn btn-secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faSearch} />\n                </button>\n                <button className=\"btn btn-danger\" onClick={reinitialiser} type=\"reset\">\n                    Réinitialiser \n                </button>\n            </form>\n            { events.map((event) => {\n                return (\n                    <div className=\"col-md-12 border border-dark mb-3 bg-light-grey\" key={event._id}>\n                        <h2 className=\"text-center\"><a className=\"color-orange\" href={'/seeEvent/' + event._id} >{event.name} </a></h2>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-4 mb-2\">\n                                <img className=\"imgEvent\" src={process.env.PUBLIC_URL + '/images/' + event.image} />\n                            </div>\n                            <div className=\"col-md-6\">\n                                <ul className=\"list-unstyled text-left contentEvent\">\n                                    <li className=\"mb-2 li-event\"> <FontAwesomeIcon icon={faCalendarAlt} size=\"2x\" className=\"mr-2\"/>  {\n                                        event.hour ?\n                                            moment(event.date).format(\"DD MMMM YYYY\") + \" à \" + event.hour :\n                                            moment(event.date).format(\"DD MMMM YYYY\")\n                                    }\n                                    </li>\n                                    <li> <FontAwesomeIcon icon={faMapMarkerAlt} size=\"2x\" className=\"mr-2\"/>  {event.place} - {event.postcode}</li>\n                                </ul>\n                            </div>\n                            <div className=\"col-md-2 mb-1\">\n                                <div className=\"verticalAlign\">\n                                    <a className=\"btn btn-primary w-100 mb-2\" onClick={(e) => { paticipateToEvent(event._id) }}> Participer {event.participants.length}  <FontAwesomeIcon icon={faUsers} size=\"sm\" className=\"mr-2\"/> </a>\n                                    <ModalInviteEvent event={event}/>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                )\n            })}\n            {\n                page.numberOfPage>0 ?\n                <PaginationPage\n                    pages={page.numberOfPage}\n                    nextPage={nextPage}\n                    currentPage={page.currentPage}\n                >\n                </PaginationPage>\n                :\n                \n                <div className=\"col-md-12\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        Aucun résultat ne correspond à votre recherche \n                    </div>\n                </div>\n                \n                \n            }\n          \n\n        </div>\n    );\n}\n\nexport default AllEvents;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\DeleteEvent.js",["214","215","216","217"],"import React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport DatePicker from 'react-datepicker'\nimport axios from \"axios\"\nimport authHeader from '../services/auth-header';\n\nconst DeleteEvent = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_EVENT\n\n    const [event, setEvent] = useState({\n        name: '',\n        eventId: '',\n        place: '',\n        city: '',\n        postcode: 0,\n        description: '',\n        hour: '',\n        date: 'moment().format(\"DD-MM-YYYY hh:mm:ss\")'\n    })\n\n    const formData = new FormData()\n\n\n    const getEvent = async()=>{\n        try {\n          const _id = props.match.params.eventId\n          const eventData = await axios.get(API_URL + \"getEvent/\" + _id, { headers: authHeader() });\n          setEvent(eventData.data)\n        } catch (e) {\n          console.log(e);\n        }\n    }\n\n    useEffect( () => {\n        getEvent();\n    }, [])\n\n    const handleDeleteEvent = async (e) => {\n        e.preventDefault()\n        try {\n        await axios.delete(API_URL + 'delete/'+event._id,{ headers: authHeader() });\n        props.history.push('/createdEvents')\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div>\n            <h1> Supprimer l'événement {event.name} </h1>\n\n            <form onSubmit={ handleDeleteEvent }>\n                <input type=\"submit\" value=\"Supprimer\" className=\"btn btn-danger\"/>\n            </form>\n\n        </div>\n    )\n}\nexport default DeleteEvent;","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\CreatedEvents.js",["218","219","220","221","222","223","224"],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport 'moment/locale/fr';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport authHeader from '../services/auth-header';\nimport PaginationPage from '../services/pagination'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { faMinusCircle, faCalendarAlt, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst CreatedEvents = () => {\n\n    const [events, setEvents] = useState([]);\n    const API_URL = process.env.REACT_APP_API_URL_EVENT\n    const API_URL2 = process.env.REACT_APP_API_URL_TYPE\n\n\n    const [types, setTypes] = useState([]);\n\n\n    const[page,setPage] = useState({\n        currentPage : 1,\n        numberOfEvents : 0,\n        numberPerPage : 2,\n        numberOfPage : 1\n    })\n\n\n    const getEvents = async () => {\n        try {\n            const events = await axios.get(API_URL + 'allCreatedEvents', { headers : authHeader() });\n            page.currentPage = 1\n            page.numberOfEvents = events.data.count\n            if( page.numberOfEvents % page.numberPerPage === 0)\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n            else\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n            setEvents(events.data.events)\n            localStorage.setItem(\"currentPageCreate\",1)\n            localStorage.setItem(\"numberOfEventsCreate\",events.data.count)\n            if(localStorage.getItem(\"setValueCreate\") == null || localStorage.getItem(\"setValueCreate\")===\"false\")\n                localStorage.setItem(\"setValueCreate\",\"true\")\n            localStorage.setItem(\"searchStringCreate\",\" \")\n            localStorage.setItem(\"typeCreate\",\"all\")\n            localStorage.setItem(\"choiceCreate\",\"all\")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getAllType = async () => {\n        const types = await axios.get(API_URL2+'allTypes')\n        setTypes(types.data)\n    }\n\n    useEffect(() => {\n        getAllType();\n        if(localStorage.getItem(\"setValueCreate\")!=\"true\")\n            getEvents();\n        else\n            nextPage(parseInt(localStorage.getItem(\"currentPageCreate\")))\n    },[])\n\n    const [search, setSearch] = useState({\n          searchString: \" \",\n          choice: \"all\",\n          type : \"all\"\n    })\n    \n    const onChangeSearch = (e) => {\n        setSearch({ ...search, [e.target.name]: e.target.value })\n        localStorage.setItem(e.target.name+\"Create\",e.target.value)\n\n    }\n\n    const reinitialiser = () => {\n        search.searchString=' '\n        search.type='all'\n        search.choice='all'\n        localStorage.setItem(\"setValueCreate\",\"false\")\n        localStorage.setItem(\"searchStringCreate\",\" \")\n        localStorage.setItem(\"typeCreate\",\"all\")\n        localStorage.setItem(\"choiceCreate\",\"all\")\n        getEvents()\n    }\n\n    const displaysearch =() => {\n        if(localStorage.getItem(\"searchStringCreate\") != null)\n            return localStorage.getItem(\"searchStringCreate\").trim()\n        else\n            return \"\"\n    }\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        if(search.searchString ===\"\" && localStorage.getItem(\"searchStringCreate\")===\"\")\n            search.searchString=\" \"\n        else\n            search.searchString = localStorage.getItem(\"searchStringCreate\")\n        const eventsDisplay = await axios.get(API_URL + 'searchCreatedevent/'+search.searchString+'/'+search.choice+'/'+search.type+\"/\"+1+'/'+page.numberPerPage, { headers: authHeader() })\n        page.currentPage = 1\n        page.numberOfEvents = eventsDisplay.data.count\n        if( page.numberOfEvents % page.numberPerPage === 0)\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n        else\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n        setEvents(eventsDisplay.data.events)\n        localStorage.setItem(\"searchStringCreate\",search.searchString)\n\n    }\n\n    const nextPage = async (number) => {\n        if(search.searchString ===\"\" && localStorage.getItem(\"searchStringCreate\")===\"\")\n            search.searchString=\" \"\n        else\n            search.searchString = localStorage.getItem(\"searchStringCreate\")\n        search.type = localStorage.getItem(\"typeCreate\")\n        search.choice = localStorage.getItem(\"choiceCreate\")\n        console.log(search.choice)\n        const eventsDisplay = await axios.get(API_URL + 'searchCreatedevent/'+search.searchString+'/'+search.choice+'/'+search.type+\"/\"+number+'/'+page.numberPerPage, { headers: authHeader() })\n        page.currentPage = number\n        page.numberOfEvents = eventsDisplay.data.count\n        if( page.numberOfEvents % page.numberPerPage === 0)\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n        else\n            page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n        setEvents(eventsDisplay.data.events)\n        localStorage.setItem(\"currentPageCreate\",number)\n        localStorage.setItem(\"numberOfEventsCreate\",eventsDisplay.data.count)\n    }\n\n\n    return (\n        <div className=\"row\">\n            <form onSubmit={handleSearch} className=\"col-md-12 my-5 example\" >\n                <div className=\"form-row mb-2\">\n                    <div className=\"col-md-2\">\n                        <select className=\"form-control\" defaultValue={\"all\"} value={search.type} name=\"type\" id=\"type\" onChange={onChangeSearch}>\n                            <option value=\" \" disabled> Type de danse</option>\n                            <option value=\"all\"> Tout type de danse</option>\n\n                            {\n                                types.map((type) => {\n                                    return (\n                                    <option key={type._id} value={type._id}> {type.name} </option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <select className=\"form-control\" defaultValue={\"all\"} value={search.choice} id=\"choice\" name=\"choice\" onChange={onChangeSearch}>\n                            <option value=\" \" disabled> État de l'événement </option>\n                            <option value=\"annule\"> Annulé</option>\n                            <option value=\"nonannule\"> Non annulé</option>\n                            <option value=\"passe\"> Passé </option>\n                            <option value=\"all\"> Tout </option>\n                        </select>\n                    </div>\n                    <div className=\"col-md-8\">\n                        <input className=\"form-control md-5\" type=\"text\" id=\"searchString\" name=\"searchString\" placeholder=\"Recherche\" onChange={onChangeSearch} value={displaysearch()} />\n                    </div>\n                </div>\n                <button className=\"btn btn-secondary\" type=\"submit\">\n                            <FontAwesomeIcon icon={faSearch} />\n                </button>\n                <button className=\"btn btn-danger\" onClick={reinitialiser} type=\"reset\">\n                    Réinitialiser \n                </button>\n            </form>\n            <div className=\"col-md-3 offset-md-9 mb-10\">\n                <a className=\"btn btn-primary w-100 topButton\" href={'/addEvent'} > Créer un événement </a>\n            </div>\n            { events.map((event) => {\n                return (\n                    <div className=\"col-md-12 border border-dark mb-3 bg-light-grey\" key={event._id}>\n                        <h2 className=\"text-center\"><a className=\"color-orange\" href={'/seeEvent/' + event._id} >{event.iscancel? <FontAwesomeIcon icon={faMinusCircle} size=\"sm\" className=\"color-red\" />  : \"\"} {event.iscancel?\"Annulé : \"  : \"\"}{event.name }</a></h2>\n                        <div className=\"row\">\n                            <div className=\"col-md-4 mb-2\">\n                                <img className=\"imgEvent\" src={process.env.PUBLIC_URL + '/images/' + event.image} />\n                            </div>\n                <div className=\"col-md-6\">\n                    <ul className=\"list-unstyled text-left contentEvent\">\n                    <li className=\"mb-2 li-event\"> <FontAwesomeIcon icon={faCalendarAlt} size=\"2x\" className=\"mr-2\"/>  {\n                        event.hour ?\n                        moment(event.date).format(\"DD MMMM YYYY\") + \" à \" + event.hour :\n                        moment(event.date).format(\"DD MMMM YYYY\")\n                    }\n                    </li>\n                    <li> <FontAwesomeIcon icon={faMapMarkerAlt} size=\"2x\" className=\"mr-2\"/>  {event.place} - {event.postcode}</li>\n                    </ul>\n                    </div>\n                            <div className=\"col-md-2 mb-3\">\n                                {\n                                    event.iscancel ?\n                                    <div>\n                                        <a className=\"btn btn-primary w-100\" href={'/deleteEvent/' + event._id} > Supprimer </a>\n                                    </div>\n                                    :\n                                    <div>\n                                        <a className=\"btn btn-primary w-100\" href={'/updateEvent/' + event._id} > Modifier </a>\n                                        <a className=\"btn btn-primary w-100 mt-2\" href={'/cancelEvent/' + event._id} > Annuler </a>\n                                    </div>\n                                }\n                               \n                            </div>\n                        </div>\n                    </div> \n\n                )\n            })}\n            {\n                page.numberOfPage>0 ?\n                <PaginationPage\n                    pages={page.numberOfPage}\n                    nextPage={nextPage}\n                    currentPage={page.currentPage}\n                >\n                </PaginationPage>\n                :\n                <div className=\"col-md-12\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        Aucun résultat ne correspond à votre recherche \n                    </div>\n                </div>\n                \n            }\n          \n        </div>\n\n    );\n\n}\n\nexport default CreatedEvents;\n\n\n\n\n\n\n\n\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\AddDanseType.js",["225"],"import React, { useState } from 'react';\nimport moment from \"moment\";\nimport authHeader from '../services/auth-header'\nimport axios from 'axios'\n\n\nconst AddDanseType = (props) => {\n\n    const API_URL2 = process.env.REACT_APP_API_URL_TYPE\n\n    const [name, setName] = useState('')\n\n    const onContentChange = (e) => {\n        setName(e.target.value)\n    }\n\n    const handleAddType = async (e) => {\n        e.preventDefault()\n        try {\n            await axios.post(API_URL2 + 'addType', { name }, { headers: authHeader() })\n            window.location.reload();\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleAddType}>\n                <input type=\"text\" name=\"name\" id=\"name\" onChange={onContentChange}/>\n                <input type=\"submit\" value=\"Envoyer\" className=\"btn btn-primary\" />\n            </form>\n        </div>\n    )\n\n}\nexport default AddDanseType;\n\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\CancelEvent.js",["226","227","228"],"import React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport DatePicker from 'react-datepicker'\nimport axios from \"axios\"\nimport authHeader from '../services/auth-header';\n\nconst CancelEvent = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_EVENT\n\n    const [event, setEvent] = useState({\n        name: '',\n        eventId: '',\n        place: '',\n        city: '',\n        postcode: 0,\n        description: '',\n        hour: '',\n        date: 'moment().format(\"DD-MM-YYYY hh:mm:ss\")'\n    })\n\n    const formData = new FormData()\n\n    const [reason,setReason] = useState(\"\")\n\n    const getEvent = async()=>{\n        try {\n          const _id = props.match.params.eventId\n          const eventData = await axios.get(API_URL + \"getEvent/\" + _id, { headers: authHeader() });\n          setEvent(eventData.data)\n        } catch (e) {\n          console.log(e);\n        }\n    }\n\n    useEffect( () => {\n        getEvent();\n    }, [])\n\n    const handleCancelEvent = async (e) => {\n        e.preventDefault()\n        try {\n        formData.append('_id', event._id);\n        formData.append('cancelreason',reason)\n        await axios.post(API_URL + 'cancel', formData, { headers: authHeader() });\n        props.history.push('/createdEvents')\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    const onChange  = (e) => {\n        setReason(e.target.value)\n    }\n\n    return (\n        <div>\n            <h1> Annuler l'événement {event.name} </h1>\n\n            <form onSubmit={ handleCancelEvent }>\n                <div className=\"form-group\">\n                    <label htmlFor=\"cancelreason\"> Raison de l'annulation </label>\n                    <textarea className=\"form-control\" id=\"cancelreason\" onChange={ onChange}>\n                    </textarea>\n                </div>\n                <input type=\"submit\" value=\"Envoyer\" className=\"btn btn-primary\"/>\n            </form>\n        </div>\n    )\n}\nexport default CancelEvent;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\users\\Register.js",["229","230","231"],"import React, { useState } from 'react'\nimport { register } from '../services/auth.service'\nimport axios from \"axios\"\nimport moment from \"moment\"\n\nconst Register = (props) => {\n\n\n    const API_URL = \"http://localhost:3001/api/user/\";\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [date, setDate]= useState(moment().format(\"DD-MM-YYYY hh:mm:ss\"))\n\n    const formData = new FormData()\n\n    const onFirstNameChange = (e) => {\n        const firstName = e.target.value;\n        setFirstName(firstName)\n    }\n\n    const onLastNameChange = (e) => {\n        const lastName = e.target.value;\n        setLastName(lastName)\n    }\n\n    const onEmailChange = (e) => {\n        const email = e.target.value;\n        setEmail(email)\n    }\n\n    const onPasswordChange = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    }\n\n    const onDateChange =(e)=>{\n        const date = e.target.value;\n        setDate(date)\n    }\n\n    const onChangeImage = (e) => {\n        const image = e.target.files[0];\n        formData.append('image', image)\n    }\n\n    \n\n    const handleAdd = async (e) => {\n        e.preventDefault();\n        try {\n            formData.append('firstName', firstName)\n            formData.append('lastName', lastName)\n            formData.append('email', email)\n            formData.append('password', password)\n            formData.append('bornDate',date)\n            await axios.post(API_URL + 'register', formData);\n\n            props.history.push('/login')\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div>\n            <h1> Créer un compte </h1>\n\n            <form onSubmit={handleAdd} >\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Prenom</label>\n                    <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" autoFocus onChange={onFirstNameChange} required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Nom</label>\n                    <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" onChange={onLastNameChange} required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"place\"> Email </label>\n                    <input className=\"form-control\" type=\"email\" id=\"place\" name=\"place\" onChange={onEmailChange} required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"city\"> Password </label>\n                    <input type=\"password\" id=\"city\" name=\"city\" className=\"form-control\" onChange={onPasswordChange} required />\n                </div>\n\n                <div className=\"col\">\n                    <label htmlFor=\"date\"> Date </label>\n                    <input type=\"date\" id=\"date\" name=\"date\" className=\"form-control\" onChange={onDateChange} value={moment(date).format(\"YYYY-MM-DD\")} required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"image\"> Image </label>\n                    <input type=\"file\" id=\"image\" name=\"image\" className=\"form-control\" onChange={onChangeImage} />\n                </div>\n\n                \n\n                <input type=\"submit\" value=\"Envoyer\" className=\"btn btn-primary\" />\n            </form>\n        </div>\n    )\n}\n\n\nexport default Register;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\events\\ParticipateEvents.js",["232","233","234","235","236","237","238","239","240"],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport 'moment/locale/fr';\nimport authHeader from '../services/auth-header';\nimport PaginationPage from '../services/pagination'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faMapMarkerAlt, faCalendarAlt, faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst ParticipateEvents = (props) => {\n\n    const [events, setEvents] = useState([]);\n    const API_URL = process.env.REACT_APP_API_URL_EVENT\n\n    const[page,setPage] = useState({\n        currentPage : 1,\n        numberOfEvents : 0,\n        numberPerPage : 2,\n        numberOfPage : 1\n    })\n\n        \n    const getEvents = async () => {\n        try {\n            const events = await axios.get(API_URL + 'participateEvent', { headers: authHeader() })\n            page.currentPage = 1\n            page.numberOfEvents = events.data.count\n            if( page.numberOfEvents % page.numberPerPage === 0)\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage)\n            else\n                page.numberOfPage = Math.floor(page.numberOfEvents / page.numberPerPage) + 1\n            setEvents(events.data.events)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    \n    useEffect(() => {\n        getEvents()\n     },[])\n\n    \n    const nextPage = async (number) => {\n        console.log(number)\n    }\n\n\n     return (\n         <div className=\"mt-5\">\n            { events.map((event) => {\n                return (\n                    <div className=\"col-md-12 border border-dark mb-3 bg-light-grey\" key={event._id}>\n                        <h2 className=\"text-center\"><a className=\"color-orange\" href={'/seeEvent/' + event._id} >{event.name} </a></h2>\n                        <h5 className=\"text-center\"><a className=\"redirect\" >{event.participants.length} participants</a></h5>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-4 mb-2\">\n                                <img className=\"imgEvent\" src={process.env.PUBLIC_URL + '/images/' + event.image} />\n                            </div>\n                    <div className=\"col-md-6\">\n                        <ul className=\"list-unstyled text-left contentEvent\">\n                        <li className=\"mb-2 li-event\"> <FontAwesomeIcon icon={faCalendarAlt} size=\"2x\" className=\"mr-2\"/>  {\n                            event.hour ?\n                            moment(event.date).format(\"DD MMMM YYYY\") + \" à \" + event.hour :\n                            moment(event.date).format(\"DD MMMM YYYY\")\n                        }\n                        </li>\n                        <li> <FontAwesomeIcon icon={faMapMarkerAlt} size=\"2x\" className=\"mr-2\"/>  {event.place} - {event.postcode}</li>\n                        </ul>\n                        </div>\n                            \n                        </div>\n                    </div>\n\n                )\n            })}\n            {\n                page.numberOfPage>0 ?\n                <PaginationPage\n                    pages={page.numberOfPage}\n                    nextPage={nextPage}\n                    currentPage={page.currentPage}\n                >\n                </PaginationPage>\n                :\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            Aucun résultat ne correspond à votre recherche \n                        </div>\n                    </div>\n                </div>\n                \n            }\n         </div>\n     )\n\n}\n\n\nexport default ParticipateEvents;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\UsersProfile.js",["241","242","243","244"],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport authHeader from '../services/auth-header';\nimport '../../css/profil.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { getCurrentUser } from '../services/auth.service';\nimport {AllPublications} from '../services/publication-service'\n\n\nconst UsersProfile = (props) => {\n\n    const API_URL =  process.env.REACT_APP_API_URL_USER\n    const API_URL1 = process.env.REACT_APP_API_URL_PUBLICATION\n    const API_URL2 =  process.env.REACT_APP_API_URL_EVENT\n\n    const _id = props.match.params.userId\n\n\n    const [user, setUser] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        bornDate: new Date(),\n        gendre: 'F',\n        bio: '',\n        country: '',\n        style: '',\n        image: '',\n        following: []\n    })\n\n    const [followers, setFollowers] = useState([])\n\n    const [publications, setPublications] = useState([]);\n\n    const [nbevent,setNbEvent] = useState({count:0})\n\n\n    const getAge = (dateString) => {\n        var today = new Date();\n        var birthDate = new Date(dateString);\n        var age = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    const getNbEventUser = async () => {\n        try{\n            const count = await axios.get(API_URL2+\"countEventsUser/\"+_id,{ headers: authHeader() })\n            setNbEvent(count.data)\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get(API_URL + _id, { headers: authHeader() })\n            setUser(user.data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const followUser = async () => {\n        try {\n            const user = await axios.post(API_URL + 'follow/' + _id, {}, { headers: authHeader() })\n            setFollowers(user.data)   \n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    const unfollowUser = async () => {\n        try {\n            const user = await axios.post(API_URL + 'unfollow/' + _id, {}, { headers: authHeader() })\n            setFollowers(user.data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    \n\n    const IsFollowing =(props)=>{\n        if(props.followers.some((follower) => follower._id === getCurrentUser()._id)) \n            return <a className=\"btn btn-primary topButton\" onClick={unfollowUser}><FontAwesomeIcon icon={faCheck} size=\"xs\"/> Abonné</a> \n        else\n           return (<a className=\"btn btn-primary topButton\" onClick={followUser}>S'abonner</a>)\n        \n    }\n\n    const getUserFollowers = async () => {\n        try {\n            const usersFollowers = await axios.get(API_URL + 'followers/' + _id, { headers: authHeader() })\n            setFollowers(usersFollowers.data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getUserPublications = async()=>{\n        try{\n            const userPublications = await axios.get(API_URL1 + 'userPublications/'+ _id ,{ headers : authHeader() })\n            setPublications(userPublications.data)\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n\n    useEffect(() => {\n        getUser();\n        getUserFollowers();\n        getUserPublications();\n        getNbEventUser();\n    }, [])\n\n\n\n\n    return (\n        <div>\n            <div className=\"ProfilHeader\">\n\n                <div>\n                    <img className=\"ProfilPicture\" src={process.env.PUBLIC_URL + '/images/' + user.image} />\n                </div>\n\n                <div>\n                    <br />\n                    <h3> {user.firstName.toUpperCase()}  {user.lastName.toUpperCase()}</h3>\n                    <h6>Age : {getAge(user.bornDate)} ans</h6>\n                    <h6>Country : {user.country}</h6>\n                    <h6>Style : {user.style}</h6>\n                </div>\n\n                <div>\n                    <div className=\"ProfilAction\">\n                        <h6><b>{publications.length} </b>Posts</h6>\n                        <h6><b>{followers.length} </b>Abonnés</h6>\n                        <h6><b>{nbevent.count}</b>Events</h6>\n                    </div>\n                    <div className=\"ProfilAction\">\n                        <h6>\n                            <a className=\"btn btn-primary topButton\" href={'/createdEvents'} > Mes événements</a>\n                        </h6>\n                    \n                        <h6>\n                            <IsFollowing followers={followers}/>\n                        </h6>\n                        <h6><a className=\"btn btn-primary topButton\" href={'/groupes'}> Groupes </a></h6>\n                    </div>\n                </div>\n\n            </div>\n\n            {/* <div className=\"row\">\n                <div className=\"col-md-3 offset-md-9\">\n                    <button className=\"btn btn-success\" onClick={toggle}> Écrire une publication </button>\n                </div>\n\n                {isOpened && (\n                    <div className=\"col-md-8 offset-md-2\">\n                        <form onSubmit={addPublication}>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"content\"> Que souhaitez-vous dire à vos amis ?</label>\n                                <textarea className=\"form-control\" type=\"text\" id=\"content\" name=\"content\" onChange={onChangeEvent} required />\n                            </div>\n\n                            <div className=\"form-row mt-2 image-upload\">\n                                <div className=\"col image-upload\">\n                                    <label for=\"imageFile\">\n                                        <img src={addImage} className=\"iconimage\" />\n                                    </label>\n                                    <input id=\"imageFile\" type=\"file\" onChange={onChangeImage} />\n                                </div>\n\n                                <div className=\"col image-upload\">\n                                    <label for=\"videoFile\">\n                                        <img src={addVideo} className=\"iconimage\" />\n                                    </label>\n                                    <input id=\"videoFileFile\" type=\"file\" />\n                                </div>\n\n                            </div>\n                            <input type=\"submit\" value=\"Ajouter ma publication\" className=\"btn btn-primary\" />\n                        </form>\n                    </div>\n                )}\n            </div> */}\n            <div className=\"ProfilContent\">\n                <br />\n                <div className=\"ProfilPosts\">\n                     <AllPublications publications={publications} user={user}/>  \n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default UsersProfile;","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\users\\Login.js",["245","246","247"],"import React, { useState } from 'react'\nimport {login} from '../services/auth.service'\nimport '../../css/login.css'\nimport '../../css/profil.css'\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = async(e) =>{\n        e.preventDefault();\n        setLoading(true);\n        try{\n            await login(email,password)\n            setLoading(false);\n            props.history.push('/');\n            window.location.reload()\n        }catch(err){\n            setErrorMessage(err);\n            setLoading(false)\n        }\n    }\n\n\n    return (\n        <div class=\"row h-100 justify-content-center align-items-center\">\n\t\t<div className=\"login-content\">\n            \t\n\t\t\t<form className=\"formLogin\" onSubmit={handleLogin}>\n\t\t\t\t{/* <img src=\"img/avatar.svg\"/> */}\n\t\t\t\t<h2 className=\"title\">Bienvenue à ShallWeDance</h2>\n           \t\t<div className=\"input-div one\">\n           \t\t   <div className=\"i\">\n           \t\t   \t\t<i className=\"fas fa-user\"></i>\n           \t\t   </div>\n           \t\t   <div className=\"div\">\n           \t\t   \t\t<h5>Email</h5>\n           \t\t   \t\t<input type=\"text\" className=\"input\" onChange={onChangeEmail}/>\n           \t\t   </div>\n           \t\t</div>\n           \t\t<div className=\"input-div pass\">\n           \t\t   <div className=\"i\"> \n           \t\t    \t<i className=\"fas fa-lock\"></i>\n           \t\t   </div>\n           \t\t   <div className=\"div\">\n           \t\t    \t<h5>Mot de Passe</h5>\n           \t\t    \t<input type=\"password\" className=\"input\" onChange={onChangePassword}/>\n            \t   </div>\n            \t</div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 row\">\n                        <div className=\"col-md-5 offset-md-1\">\n                        <a href=\"/register\">Créé nouveau compte</a>\n                        </div>\n                        <div className=\"col-md-5\">\n                        <a href=\"\">Mot de passe oublié ?</a>\n                        </div>\n                    </div>\n                    <div className=\"col-md-12\">\n            \t        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n                    </div>\n                </div>\n            </form>\n        </div>\n        </div>\n      \n    )\n}\n\n\nexport default Login;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\Profile.js",["248","249","250","251","252","253","254","255","256","257","258","259","260"],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\AddGroupe.js",["261","262","263","264","265"],"import React, {useEffect, useState} from 'react';\nimport authHeader from '../services/auth-header'\nimport axios from 'axios'\nimport ReactHTMLDatalist from \"react-html-datalist\"\n\n\nconst AddGroupe = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_GROUPE\n    const API_URL_2 = process.env.REACT_APP_API_URL_USER\n\n    const [groupe, setGroupe] = useState(\n        {\n            name: '',\n            description: '',\n            membres: []\n        })\n\n    const [users] = useState(\n        []\n    )\n\n    let userSearched = {};\n\n    const [allUsers, setAllUsers] = useState(\n        []\n    )\n\n    const getUsers = async () => {\n        try {\n            const usrs = await axios.get(API_URL_2 + 'allUsers',{ headers: authHeader() });\n            for (let usr in usrs.data) {\n                users.push({text: usrs.data[usr].firstName + ' ' + usrs.data[usr].lastName, value: usrs.data[usr]._id})\n            }\n            setAllUsers(usrs.data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        getUsers();\n    },[])\n\n    const [errorMessage, setErrorMessage] = useState('')\n    const formData = new FormData()\n\n\n    const onChangeGroupe = (g) => {\n        setGroupe({...groupe, [g.target.name]: g.target.value})\n    }\n\n    let image;\n\n    const onChangeImage = (g) => {\n        image = g.target.files[0];\n    }\n\n    const handleAddGroupe = async (e) => {\n        e.preventDefault();\n        try {\n            formData.append('name', groupe.name);\n            formData.append('description', groupe.description);\n            console.log(image);\n            if(image) {\n                formData.append('image', image);\n            }\n            groupe.membres.forEach((membre) => {\n                formData.append('membres', membre._id);\n            })\n            await axios.post(API_URL + 'addGroupe', formData, { headers: authHeader() })\n            props.history.push('/groupes')\n        } catch (e) {\n            setErrorMessage(e);\n            console.log(e);\n        }\n    }\n\n    const handleChange = e => {\n        userSearched = e.target.value\n    };\n\n    function addMembre() {\n        allUsers.forEach((usr) => {\n            if(usr._id === userSearched && !groupe.membres.includes(usr)) {\n                groupe.membres = [...groupe.membres, usr];\n                userSearched = {};\n                setGroupe({...groupe, ['membres']: groupe.membres})\n            }\n        })\n    }\n\n    function deleteRow(membre) {\n        groupe.membres.splice(groupe.membres.indexOf(membre), 1);\n        setGroupe({...groupe, ['membres']: groupe.membres})\n    }\n\n\n    function displayMembres() {\n        return (groupe.membres.map((membre) => {\n            return (\n                <tr key={membre._id}>\n                <td>\n                <img className=\"avatar\" src={process.env.PUBLIC_URL + '/images/' + membre.image}/>\n            </td>\n            <td>\n            {membre.firstName + ' ' + membre.lastName}\n            </td>\n                <td>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={() => deleteRow(membre)}>\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </td>\n            </tr>\n        )\n        }))\n    }\n\n    return (\n        <div>\n        <h1> Ajout d'un groupe </h1>\n    <form onSubmit={ handleAddGroupe} encType=\"multipart/form-data\" >\n        <div className=\"form-group\">\n        <label htmlFor=\"name\">Nom</label>\n        <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" onChange={onChangeGroupe} required />\n    </div>\n\n\n    <div className=\"form-group\">\n        <label htmlFor=\"description\"> Description </label>\n        <textarea id=\"description\" name=\"description\" className=\"form-control\" onChange={onChangeGroupe} required> </textarea>\n    </div>\n\n    <div className=\"form-group\">\n        <label htmlFor=\"image\"> Image </label>\n        <input type=\"file\" id=\"image\" name=\"image\" className=\"form-control\" onChange={onChangeImage} />\n    </div>\n    \n    <div>\n        <label htmlFor=\"searchUser\"> Rechercher un utilisateur </label>\n        <ReactHTMLDatalist\n            name={\"searchUser\"}\n            onChange={handleChange}\n            classNames={\"form-control\"}\n            options={users}\n      />\n          <input type=\"button\"  className=\"btn btn-primary\" onClick={addMembre}  value=\"Inviter\"/>\n    </div>\n        <div className=\"row\">\n        <div className=\"table-responsive mt-3 col-md-6 offset-md-3\">\n        <table className=\"table\">\n        <thead>\n        <tr>\n        <td></td>\n        <td>Membres à inviter</td>\n        <td></td>\n        </tr>\n        </thead>\n    <tbody>\n    {displayMembres() }\n    </tbody>\n    </table>\n        </div>\n    </div>\n\n    <input type=\"submit\" value=\"Envoyer\" className=\"btn btn-primary\" />\n        </form>\n        </div>\n\n);\n}\n\nexport default AddGroupe;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\EditProfile.js",["266"],"import axios from 'axios'\nimport '../../css/editProfile.css'\nimport authHeader from '../services/auth-header';\nimport { useState, useEffect } from 'react'\nimport bcrypt from 'bcryptjs'\nimport {logout} from '../services/auth.service'\n\nconst EditProfil = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_USER\n\n    const [user, setUser] = useState({\n        firstName: '',\n        lastName: '',\n        country: '',\n        style: '',\n        image:''\n    })\n\n    const [image, setImage] = useState({name: \"\"})\n    const [passwordVerif, setPasswordVerif] = useState('')\n    const [password, setPassword] = useState('')\n    const [oldPassword, setOldPassword] = useState('')\n\n    const formData = new FormData()\n\n    const handleLogout = async (e) => {\n        try {\n            await logout()\n            window.location.href = \"login\"\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getProfile = async () => {\n        try {\n            const userData = await axios.get(API_URL + \"me\", { headers: authHeader() });\n            setUser(userData.data)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getProfile();\n    }, [])\n\n\n    const onChangeUser = (e) => {\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    const onChangePassword = (e) =>{\n        setPassword(e.target.value)\n    }\n\n    const onChangePasswordVerif = (e) => {\n        setPasswordVerif(e.target.value)\n    }\n\n    const onChangeOldPassword = (e) => {\n        setOldPassword(e.target.value)\n    }\n\n    const onChangeImage = (e) => {\n        //formData.append('image', e.target.files[0])\n        setImage(e.target.files[0])\n        console.log(e.target.files[0])\n    }\n\n    const handleUserUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const isMatch = await bcrypt.compare(oldPassword, user.password)\n            formData.append(\"firstName\",user.firstName)\n            formData.append(\"lastName\",user.lastName)\n            formData.append(\"country\",user.country)\n            formData.append(\"style\",user.style)\n            if(image.name)\n                formData.append('image', image)\n\n            if (password && (password !== passwordVerif || !isMatch))\n                    alert('Not Matching Password')\n            else {\n                if (password){\n                    //user.password = password\n                    formData.append(\"password\",password)\n                    await axios.post(API_URL + 'update/me', formData, { headers: authHeader() })\n                    handleLogout();\n                }else{\n                    await axios.post(API_URL + 'update/me', formData, { headers: authHeader() })                    \n                    props.history.push('/profile')\n                }\n            }\n        } catch (e) {\n            console.log(e)\n        } \n    }\n\n    return (\n        <div className=\"container bootstrap snippet\">\n            <div className=\"row\">\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n\n\n                    <div className=\"text-center\">\n                        <img src={process.env.PUBLIC_URL + '/images/' + user.image} className=\"img-circle img-thumbnail\" alt=\"avatar\" />\n                        <input type=\"file\" className=\"text-center center-block\" onChange={onChangeImage} />\n                    </div><hr /><br />\n\n\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item text-muted\">Activity <i className=\"fa fa-dashboard fa-1x\"></i></li>\n                        <li className=\"list-group-item text-right\"><span className=\"pull-left\"><strong>Posts</strong></span> 37</li>\n                        <li className=\"list-group-item text-right\"><span className=\"pull-left\"><strong>Abonnés</strong></span> 78</li>\n                    </ul>\n\n\n\n                </div>\n                <div className=\"col-sm-9\">\n                    <div className=\"tab-content\">\n                        <div className=\"tab-pane active\" id=\"home\">\n                            <hr />\n                            <form className=\"form\" onSubmit={handleUserUpdate} >\n                                <div className=\"form-group\">\n\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Prénom</h4></label>\n                                        <input type=\"text\" className=\"form-control\" value={user.firstName} onChange={onChangeUser} name=\"firstName\" id=\"firstName\" placeholder=\"first name\" title=\"enter your first name if any.\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n\n                                    <div className=\"col-xs-6\">\n                                        <label ><h4>Nom</h4></label>\n                                        <input type=\"text\" className=\"form-control\" value={user.lastName} onChange={onChangeUser} name=\"lastName\" id=\"lastName\" placeholder=\"last name\" title=\"enter your last name if any.\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Style</h4></label>\n                                        <input type=\"text\" className=\"form-control\" value={user.style} onChange={onChangeUser} name=\"style\" id=\"last_name\" placeholder=\"style\" title=\"enter your style\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Location</h4></label>\n                                        <input type=\"text\" className=\"form-control\" value={user.country} onChange={onChangeUser} name=\"country\" id=\"location\" placeholder=\"somewhere\" title=\"enter a location\" />\n                                    </div>\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Ancien Mot de passe</h4></label>\n                                        <input type=\"password\" className=\"form-control\" name=\"oldPassword\" id=\"password\" onChange={onChangeOldPassword} placeholder=\"old password\" title=\"enter your password.\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Nouveau Mot de passe</h4></label>\n                                        <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" onChange={onChangePassword} placeholder=\"new password\" title=\"enter your password.\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n\n                                    <div className=\"col-xs-6\">\n                                        <label><h4>Verifier Mot de Passe </h4></label>\n                                        <input type=\"password\" className=\"form-control\" name=\"passwordVerif\" id=\"passwordVerif\" onChange={onChangePasswordVerif} placeholder=\"password verification\" title=\"enter your password2.\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"col-xs-12\">\n                                        <br />\n                                        <button className=\"btn btn-success\" type=\"submit\"> Save</button>\n                                    </div>\n                                </div>\n                            </form>\n\n                            <hr />\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default EditProfil;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\AllGroupes.js",["267","268","269","270"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'moment/locale/fr';\nimport authHeader from '../services/auth-header';\nimport {getCurrentUser} from \"../services/auth.service\";\n\n\nconst AllGroupes = () => {\n\n    const [groupes, setGroupes] = useState([]);\n    const API_URL = process.env.REACT_APP_API_URL_GROUPE\n\n    const getGroupes = async () => {\n        try {\n            const grps = await axios.get(API_URL + 'allGroupes',{ headers: authHeader() });\n            setGroupes(grps.data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        getGroupes();\n    },[])\n\n\n    async function leaveGroupe(groupe) {\n        const grps = await axios.post(API_URL + 'leave', groupe,{ headers: authHeader() });\n        setGroupes(grps.data)\n    }\n\n    async function deleteGroupe(groupe) {\n        const grps = await axios.delete(API_URL + 'delete/' + groupe._id, { headers: authHeader() });\n        setGroupes(grps.data)\n    }\n\n    function displayDeleteButton(groupe) {\n        if(getCurrentUser()._id === groupe.owner) {\n            return(<a className=\"btn btn-primary w-100 mb-3\" onClick={() => deleteGroupe(groupe)} > Supprimer</a>)\n        } else {\n            return;\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-3 offset-md-9 mb-10\">\n            <a className=\"btn btn-primary w-100 topButton\" href={'/addGroupe'} > Créer un groupe </a>\n        </div>\n    { groupes.map((groupe) => {\n        return (\n            <div className=\"col-md-12 border border-dark mb-3 bg-light-grey\" key={groupe._id}>\n            <h2 className=\"text-center color-orange\">{groupe.name}</h2>\n        <div className=\"row\">\n            <div className=\"col-md-4 mb-2\">\n            <img className=\"imgEvent\" src={process.env.PUBLIC_URL + '/images/' + groupe.image} />\n        </div>\n        <div className=\"col-md-6 list-unstyled text-left contentEvent\">\n        {groupe.description}\n        </div>\n        <div className=\"col-md-2 mb-3\">\n            <a className=\"btn btn-primary w-100 mb-3\" href={'/updateGroupe/' + groupe._id} > Modifier </a>\n            <a className=\"btn btn-primary w-100 mb-3\" href={'/listMembres/' + groupe._id} > Voir membres </a>\n            <a className=\"btn btn-primary w-100 mb-3\" onClick={() => leaveGroupe(groupe)} > Quitter le groupe</a>\n            {displayDeleteButton(groupe)}\n            </div>\n            </div>\n            </div>\n\n    )\n    })}\n\n    </div>\n\n);\n\n}\n\nexport default AllGroupes;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\UpdateGroupe.js",["271"],"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport authHeader from '../services/auth-header';\n\nconst UpdateGroupe = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_GROUPE\n\n    const [groupe, setGroupe] = useState({\n        name: '',\n        eventId: '',\n        place: '',\n        city: '',\n        postcode: 0,\n        description: '',\n        hour: '',\n        date: 'moment().format(\"DD-MM-YYYY hh:mm:ss\")'\n    })\n    const formData = new FormData()\n\n    const getEvent = async()=>{\n        try {\n            const _id = props.match.params.groupeId\n            const groupeData = await axios.get(API_URL + \"getGroupe/\" + _id, { headers: authHeader() });\n            setGroupe(groupeData.data)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect( () => {\n        getEvent();\n    }, [])\n\n    const onChangeGroupe = (g) => {\n        setGroupe({ ...groupe, [g.target.name]: g.target.value });\n    }\n\n    const onChangeImage = (g) => {\n        formData.append('image',g.target.files[0])\n    }\n\n    const handleGroupeUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const _id = props.match.params.groupeId\n            formData.append('_id', _id);\n            formData.append('name',groupe.name);\n            formData.append('description', groupe.description);\n            groupe.membres.forEach((membre) => {\n                formData.append('membres', membre._id);\n            })\n            await axios.post(API_URL + 'update', formData, { headers: authHeader() })\n            props.history.push('/groupes')\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div>\n        <h1> Modification du groupe { groupe.name } </h1>\n    <form onSubmit={ handleGroupeUpdate }>\n        <div className=\"form-group\">\n        <label htmlFor=\"name\">Nom</label>\n        <input className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" value={groupe.name} onChange={onChangeGroupe} required />\n    </div>\n\n\n    <div className=\"form-group\">\n        <label htmlFor=\"description\"> Description </label>\n        <textarea id=\"description\" name=\"description\" className=\"form-control\" value={groupe.description} onChange={onChangeGroupe} required> </textarea>\n    </div>\n\n    <div className=\"form-group\">\n        <label htmlFor=\"image\"> Image </label>\n        <input type=\"file\" id=\"image\" name=\"image\" className=\"form-control\" onChange={onChangeImage} />\n    </div>\n\n\n    <input type=\"submit\" value=\"Envoyer\" />\n        </form>\n        </div>\n);\n\n}\n\nexport default UpdateGroupe;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\groupes\\ListMembres.js",["272","273","274","275"],"import React, {useEffect, useState} from 'react';\nimport authHeader from '../services/auth-header'\nimport axios from 'axios'\nimport ReactHTMLDatalist from \"react-html-datalist\"\nimport {getCurrentUser} from \"../services/auth.service\";\n\n\nconst ListMembres = (props) => {\n\n    const API_URL = process.env.REACT_APP_API_URL_GROUPE\n    const API_URL_2 = process.env.REACT_APP_API_URL_USER\n\n    const [groupe, setGroupe] = useState(\n        {\n            name: '',\n            description: '',\n            image: '',\n            owner: '',\n            membres: []\n        })\n\n    const [users] = useState(\n        []\n    )\n\n    let userSearched = {};\n\n    const [allUsers, setAllUsers] = useState(\n        []\n    )\n\n    const connectedUser = getCurrentUser();\n    const formData = new FormData()\n\n\n    const getUsers = async () => {\n        try {\n            const usrs = await axios.get(API_URL_2 + 'allUsers',{ headers: authHeader() });\n            for (let usr in usrs.data) {\n                users.push({text: usrs.data[usr].firstName + ' ' + usrs.data[usr].lastName, value: usrs.data[usr]._id})\n            }\n            setAllUsers(usrs.data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getEvent = async()=>{\n        try {\n            const _id = props.match.params.groupeId;\n            const groupeData = await axios.get(API_URL + \"getGroupe/withMembres/\" + _id, { headers: authHeader() });\n            return groupeData.data;\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getEvent().then((groupe) => {\n            setGroupe(groupe);\n            console.log(connectedUser)\n            console.log(groupe)\n            if(groupe.owner === connectedUser._id) {\n                getUsers();\n            }\n        });\n    },[])\n\n    const handleChange = e => {\n        userSearched = e.target.value\n    };\n\n    function addMembre() {\n        allUsers.forEach((usr) => {\n            if(usr._id === userSearched && !groupe.membres.includes(usr)) {\n                groupe.membres = [...groupe.membres, usr];\n                userSearched = {};\n                setGroupe({...groupe, ['membres']: groupe.membres})\n                updateGroupe();\n            }\n        })\n    }\n\n    function deleteRow(membre) {\n        groupe.membres.splice(groupe.membres.indexOf(membre), 1);\n        setGroupe({...groupe, ['membres']: groupe.membres})\n        updateGroupe();\n    }\n\n    async function updateGroupe() {\n        try {\n            const _id = props.match.params.groupeId\n            formData.append('_id', _id);\n            formData.append('name',groupe.name);\n            formData.append('description', groupe.description);\n            formData.append('image', groupe.image);\n            groupe.membres.forEach((membre) => {\n                formData.append('membres', membre._id);\n            })\n            await axios.post(API_URL + 'update', formData, { headers: authHeader() })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function displayMembres() {\n        return (groupe.membres.map((membre) => {\n            return (\n                <tr key={membre._id}>\n                <td>\n                <img className=\"avatar\" src={process.env.PUBLIC_URL + '/images/' + membre.image}/>\n            </td>\n            <td>\n            {membre.firstName + ' ' + membre.lastName}\n            </td>\n            <td>\n            { expulseMemberButton(membre) }\n            </td>\n            </tr>\n        )\n        }))\n    }\n\n    function expulseMemberButton(membre) {\n        if(connectedUser._id === groupe.owner) {\n        return (\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => deleteRow(membre)}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            )\n        } else {\n            return;\n        }\n    }\n\n    function displaySearchBar() {\n        if(connectedUser._id === groupe.owner) {\n            return (<div>\n            <label htmlFor=\"searchUser\"> Rechercher un utilisateur </label>\n            <ReactHTMLDatalist\n            name={\"searchUser\"}\n            onChange={handleChange}\n            classNames={\"form-control\"}\n            options={users}\n            />\n            <input type=\"button\" className=\"btn btn-primary\" onClick={addMembre}  value=\"Inviter\"/>\n                </div>\n            )\n        } else {\n            return;\n        }\n\n    }\n\n    return (\n        <div>\n        <h1> Liste des membres </h1>\n\n        { displaySearchBar() }\n        <div className=\"row\">\n        <div className=\"table-responsive mt-3 col-md-6 offset-md-3\">\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <td></td>\n                    <td>Membres</td>\n                    <td></td>\n                </tr>\n            </thead>\n            <tbody>\n                {displayMembres() }\n            </tbody>\n        </table>\n        </div>\n        </div>\n    </div>\n\n);\n}\n\nexport default ListMembres;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\profil\\Post.js",["276","277","278"],"import React, { useState } from \"react\";\nimport '../../css/posts.css'\nimport axios from 'axios'\nimport authHeader from '../services/auth-header';\nimport { getCurrentUser } from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\n\n\nconst API_URL_3 = process.env.REACT_APP_API_URL_COMMENT\n\n\nfunction PostHeader({ author, date }) {\n    return (\n        <div className=\"post-header\">\n            <img className=\"avatar\" />\n            <div className=\"details\">\n                <span>Ilyas</span>\n                <span>21/09/2020</span>\n            </div>\n        </div>\n    );\n}\n\nfunction PostComments(props) {\n    \n    const [content, setContent] = useState('')\n    const [comments, setComments]= useState(props.comments? props.comments:[])\n\n    const onContentChange = (e) => {\n        setContent(e.target.value)\n    }\n\n\n    const handleAddComment = async (e) => {\n        e.preventDefault()\n        try {\n            let comment = await axios.post(API_URL_3 + 'addComment/'+props.idPub, { content }, { headers: authHeader() })\n            comment.data.owner = await getCurrentUser();\n            setComments([...comments, comment.data])\n            setContent('')\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    return (\n        <div className=\"post-comments\">\n\n            {comments.map(comment => (\n                <div key={comment.id} className=\"comment\">\n                    <img className=\"avatar\" src={process.env.PUBLIC_URL + '/images/' + comment.owner.image} />\n                    <p>\n                        <Link to={\"/profile/\"+comment.owner._id}><span>{comment.owner.firstName + ' ' + comment.owner.lastName}</span></Link>\n                        {comment.content}\n                    </p>\n                </div>\n            ))}\n            {\n                props.isClickedComment &&\n                <div>\n                    <input value={content} onChange={onContentChange}>\n                    </input>\n                    <button className=\"btn btn-primary\" onClick={handleAddComment}>send</button>\n                </div>\n            }\n        </div>\n    );\n}\n\n\n\nexport default PostComments;\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\publication-service.js",["279","280","281","282","283","284","285"],"import axios from 'axios'\nimport moment from \"moment\";\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PostComments from '../profil/Post'\nimport authHeader from '../services/auth-header';\n\n\nconst API_URL_2 = process.env.REACT_APP_API_URL_PUBLICATION\nconst API_URL = process.env.REACT_APP_API_URL_USER\n\n\n\nexport function diffDate (date) {\n    var now = moment(new Date());\n    const secondes = Math.round(moment.duration(now.diff(date)).asSeconds());\n    const minutes = Math.round(moment.duration(now.diff(date)).asMinutes());\n    const hours = Math.round(moment.duration(now.diff(date)).asHours());\n    const days = Math.round(moment.duration(now.diff(date)).asDays());\n    if(secondes < 60){\n       return \"Il y a \" + secondes + \" secondes\";\n    }\n    else if(minutes < 60 ){\n      return \"Il y a \" + minutes + \" minutes\";\n    }\n    else if (hours < 24){\n      return \"Il y a \"+ hours + \" heures\";\n    }\n    else{\n      return \"Il y a \"+ days + \" jours\";\n    }\n}\n\n\n\nexport function AllPublications(props){\n    const [isClickedComment, setIsClickedComment] = useState(false);\n\n   \n    const showCommentField = () => {\n        setIsClickedComment(!isClickedComment)\n    }\n\n    const likePublication =(_id) => {\n        props.likePublication(_id)\n    }\n\n    const unLikePublicaton = (_id) => {\n        props.unLikePublicaton(_id)\n    }\n   \n    const likeButton =(publiLikes, id,userid,props) => {\n        if (publiLikes.indexOf(userid) >= 0) {\n            return <button className=\"btn btn-danger btn-block\" onClick={(e) => { unLikePublicaton(id); } }> Je n'aime plus</button>;\n        }\n        else {\n            return <button className=\"btn btn-primary btn-block\" onClick={(e) => { likePublication(id); } }> J'aime</button>;\n        }\n    }\n\n   \n    return (\n        <div className=\"row\">\n        {\n            props.publications.map((publi) => {\n                    return(\n                        <div className=\"col-md-12\" key={publi._id}>\n                            <div className=\"post\">\n                                <div className=\"post-header col-md-4\">\n                                    \n                                        <img className=\"avatar\" src={process.env.PUBLIC_URL + '/images/' +  publi.owner.image  } />\n                                    \n                                        <div className=\"details\">\n                                                <span className=\"mx-4\"> <Link to={\"/profile/\"+ publi.owner._id}>{publi.owner.firstName}</Link> \n                                                {publi.event && props.isContent ? <div>{'->'} <Link to={\"/seeEvent/\"+ publi._id} className='color-orange'> {publi.event.name} </Link></div> : \"\"} \n                                                </span>\n                                                <span className=\"mx-2\"> { diffDate(publi.createdAt) } </span>\n                                        </div>\n\n                                </div>\n\n                                <h1 className=\"post-content col-md-2\">{ publi.content} </h1>\n                                {\n                                    publi.image ?  <img src={process.env.PUBLIC_URL + '/images/' + publi.image} className=\"imgPost\"></img> : \"\"\n                                }\n                                <br/>\n                                <br/>\n                             <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    {likeButton(publi.likes,publi._id,props.user._id)}\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <button className=\"btn btn-primary btn-block\" onClick={showCommentField}> Commenter</button>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <button className=\"btn btn-primary btn-block\"> Partager</button>\n                                </div>\n                            </div>\n\n                            <PostComments comments={publi.comments} isClickedComment={isClickedComment} idPub= {publi._id}/>\n\n                            </div>\n                           \n                        </div>\n                )\n                }\n            )\n        }\n        </div>\n);\n}\n\n\n\n","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\pagination.js",[],"C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\services\\invite-service.js",["286","287","288","289","290"],"import axios from 'axios'\nimport { useState } from 'react';\nimport authHeader from '../services/auth-header';\nimport { Modal, Button } from 'react-bootstrap'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactHTMLDatalist from \"react-html-datalist\"\nimport { getCurrentUser} from \"../services/auth.service\";\n\n\n\nexport function ModalInviteEvent(props) {\n\n    const API_URL_2 = process.env.REACT_APP_API_URL_USER\n    const API_URL_3 = process.env.REACT_APP_API_URL_NOTIFICATION\n \n\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n        getUsers()\n        getUser()\n        setShow(true)\n    }\n\n    const [user, setUser] = useState({\n        firstName: '',\n        lastName:'',\n        email: '',\n        bornDate: new Date(),\n        gendre: 'F',\n        bio: '',\n        country: '',\n        style:'',\n        image: ''\n    })\n\n    const [notification,setNotification] = useState({\n        \"receiverdisplay\" : [],\n        \"receiver\" : [],\n        \"statut\" : \"nonlu\",\n        \"lien\" : \"/seeEvent/\"+props.event._id,\n        \"title\" : getCurrentUser().firstName+\" vous invite à participer à l'événement \"+props.event.name\n    })\n\n    const [users] = useState(\n        []\n    )\n\n    let userSearched = {};\n\n    const [allUsers, setAllUsers] = useState(\n        []\n    )\n\n    const handleChange = e => {\n        userSearched = e.target.value\n    };\n\n\n    const getUsers = async () => {\n        try {\n            const usrs = await axios.get(API_URL_2 + 'allUsers',{ headers: authHeader() });\n            for (let usr in usrs.data) {\n                users.push({text: usrs.data[usr].firstName + ' ' + usrs.data[usr].lastName, value: usrs.data[usr]._id})\n            }\n            setAllUsers(usrs.data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function addMembre() {\n        allUsers.forEach((usr) => {\n            if(usr._id === userSearched && !notification.receiverdisplay.includes(usr)) {\n                notification.receiverdisplay = [...notification.receiverdisplay, usr]\n                notification.receiver = [...notification.receiver,usr._id]\n                userSearched = {};\n                setNotification({...notification, ['receiverdisplay']: notification.receiverdisplay})\n            }\n        })\n        console.log(notification)\n    }\n\n    const getUser = async () => {\n        setUser(getCurrentUser());\n    }\n\n    const handleInvite = async (e) => {\n        e.preventDefault();\n        try{\n            setNotification({...notification,['receiverdisplay'] : []})\n            await axios.post(API_URL_3 + 'addNotification', notification, { headers: authHeader() })\n            setShow(false)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    function displayMembres() {\n        return (notification.receiverdisplay.map((receiverdisplay) => {\n            return (\n                <tr key={receiverdisplay._id}>\n                <td>\n                <img className=\"avatar\" src={process.env.PUBLIC_URL + '/images/' + receiverdisplay.image}/>\n            </td>\n            <td>\n            {receiverdisplay.firstName + ' ' + receiverdisplay.lastName}\n            </td>\n                <td>\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => deleteRow(receiverdisplay)}>\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </td>\n            </tr>\n        )\n        }))\n    }\n\n    function deleteRow(receiverdisplay) {\n        notification.receiverdisplay.splice(notification.receiverdisplay.indexOf(receiverdisplay), 1);\n        setNotification({...notification, ['receiverdisplay']: notification.receiverdisplay})\n    }\n\n    return (\n      <div>\n        <Button variant=\"primary\" className=\"btn btn-primary w-100\" onClick={handleShow} >\n          Inviter des amis\n        </Button>\n\n        <Modal show={show} onHide={handleClose} centered keyboard={true} size=\"xl\">\n        <Modal.Header closeButton>\n          <Modal.Title>Inviter des amis à l'événement {props.event.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <form onSubmit={handleInvite}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"searchUser\"> Rechercher un utilisateur </label>\n                    <ReactHTMLDatalist\n                        name={\"searchUser\"}\n                        onChange={handleChange}\n                        classNames={\"form-control\"}\n                        options={users}\n                    />\n                </div>\n            \n                <input type=\"button\"  className=\"btn btn-primary mb-2\" onClick={addMembre}  value=\"Ajouter des amis\"/> <br/>\n                <div className=\"row text-center\">\n                    <div className=\"table-responsive mt-3 col-md-6 offset-md-3\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                <td></td>\n                                <td>Amis à inviter</td>\n                                <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {displayMembres() }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-4 offset-md-4\">\n                        <input type=\"submit\" value=\"Inviter\" className=\"btn btn-primary btn-block\" />\n                    </div>\n                </div>\n            </form>\n            \n        </Modal.Body>\n      </Modal>\n      </div>\n    );\n  }","C:\\Users\\Dell\\Documents\\M2 e-service\\NodeJS\\shallwedance\\Front-End\\src\\components\\rates\\RateCard.js",["291","292","293"],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":10,"column":33,"nodeType":"300","messageId":"301","endLine":10,"endColumn":37},{"ruleId":"298","severity":1,"message":"302","line":10,"column":38,"nodeType":"300","messageId":"301","endLine":10,"endColumn":49},{"ruleId":"298","severity":1,"message":"303","line":10,"column":50,"nodeType":"300","messageId":"301","endLine":10,"endColumn":56},{"ruleId":"298","severity":1,"message":"304","line":10,"column":57,"nodeType":"300","messageId":"301","endLine":10,"endColumn":62},{"ruleId":"298","severity":1,"message":"305","line":28,"column":12,"nodeType":"300","messageId":"301","endLine":28,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":52,"column":7,"nodeType":"308","endLine":52,"endColumn":9,"suggestions":"309"},{"ruleId":"298","severity":1,"message":"310","line":54,"column":9,"nodeType":"300","messageId":"301","endLine":54,"endColumn":16},{"ruleId":"298","severity":1,"message":"311","line":131,"column":19,"nodeType":"300","messageId":"301","endLine":131,"endColumn":32},{"ruleId":"298","severity":1,"message":"312","line":141,"column":19,"nodeType":"300","messageId":"301","endLine":141,"endColumn":31},{"ruleId":"313","severity":1,"message":"314","line":192,"column":70,"nodeType":"315","messageId":"316","endLine":192,"endColumn":72},{"ruleId":"317","severity":1,"message":"318","line":193,"column":178,"nodeType":"319","endLine":193,"endColumn":255},{"ruleId":"306","severity":1,"message":"320","line":217,"column":8,"nodeType":"308","endLine":217,"endColumn":10,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":221,"column":37,"nodeType":"319","endLine":221,"endColumn":76},{"ruleId":"298","severity":1,"message":"324","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"298","severity":1,"message":"325","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":20},{"ruleId":"306","severity":1,"message":"326","line":111,"column":6,"nodeType":"308","endLine":111,"endColumn":8,"suggestions":"327"},{"ruleId":"322","severity":1,"message":"323","line":133,"column":21,"nodeType":"319","endLine":133,"endColumn":65},{"ruleId":"322","severity":1,"message":"323","line":140,"column":21,"nodeType":"319","endLine":140,"endColumn":65},{"ruleId":"328","severity":1,"message":"329","line":3,"column":1,"nodeType":"330","endLine":10,"endColumn":3},{"ruleId":"298","severity":1,"message":"331","line":1,"column":16,"nodeType":"300","messageId":"301","endLine":1,"endColumn":24},{"ruleId":"298","severity":1,"message":"332","line":1,"column":26,"nodeType":"300","messageId":"301","endLine":1,"endColumn":35},{"ruleId":"298","severity":1,"message":"333","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":15},{"ruleId":"298","severity":1,"message":"334","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"335","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":18},{"ruleId":"306","severity":1,"message":"336","line":35,"column":6,"nodeType":"308","endLine":35,"endColumn":8,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":96,"column":123,"nodeType":"340","endLine":96,"endColumn":170},{"ruleId":"298","severity":1,"message":"341","line":8,"column":9,"nodeType":"300","messageId":"301","endLine":8,"endColumn":17},{"ruleId":"298","severity":1,"message":"342","line":8,"column":18,"nodeType":"300","messageId":"301","endLine":8,"endColumn":33},{"ruleId":"298","severity":1,"message":"343","line":8,"column":34,"nodeType":"300","messageId":"301","endLine":8,"endColumn":50},{"ruleId":"298","severity":1,"message":"344","line":8,"column":51,"nodeType":"300","messageId":"301","endLine":8,"endColumn":61},{"ruleId":"298","severity":1,"message":"345","line":8,"column":78,"nodeType":"300","messageId":"301","endLine":8,"endColumn":85},{"ruleId":"298","severity":1,"message":"346","line":42,"column":12,"nodeType":"300","messageId":"301","endLine":42,"endColumn":24},{"ruleId":"298","severity":1,"message":"347","line":45,"column":9,"nodeType":"300","messageId":"301","endLine":45,"endColumn":12},{"ruleId":"298","severity":1,"message":"348","line":70,"column":12,"nodeType":"300","messageId":"301","endLine":70,"endColumn":17},{"ruleId":"298","severity":1,"message":"349","line":70,"column":19,"nodeType":"300","messageId":"301","endLine":70,"endColumn":27},{"ruleId":"306","severity":1,"message":"350","line":129,"column":8,"nodeType":"308","endLine":129,"endColumn":10,"suggestions":"351"},{"ruleId":"298","severity":1,"message":"352","line":164,"column":19,"nodeType":"300","messageId":"301","endLine":164,"endColumn":28},{"ruleId":"298","severity":1,"message":"352","line":175,"column":19,"nodeType":"300","messageId":"301","endLine":175,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":202,"column":64,"nodeType":"319","endLine":202,"endColumn":192},{"ruleId":"322","severity":1,"message":"323","line":235,"column":21,"nodeType":"319","endLine":235,"endColumn":109},{"ruleId":"317","severity":1,"message":"318","line":253,"column":30,"nodeType":"319","endLine":253,"endColumn":117},{"ruleId":"322","severity":1,"message":"323","line":286,"column":49,"nodeType":"319","endLine":286,"endColumn":92},{"ruleId":"322","severity":1,"message":"323","line":293,"column":49,"nodeType":"319","endLine":293,"endColumn":92},{"ruleId":"298","severity":1,"message":"346","line":27,"column":10,"nodeType":"300","messageId":"301","endLine":27,"endColumn":22},{"ruleId":"306","severity":1,"message":"353","line":71,"column":6,"nodeType":"308","endLine":71,"endColumn":8,"suggestions":"354"},{"ruleId":"298","severity":1,"message":"333","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":15},{"ruleId":"298","severity":1,"message":"355","line":7,"column":9,"nodeType":"300","messageId":"301","endLine":7,"endColumn":23},{"ruleId":"298","severity":1,"message":"356","line":11,"column":10,"nodeType":"300","messageId":"301","endLine":11,"endColumn":20},{"ruleId":"298","severity":1,"message":"357","line":11,"column":22,"nodeType":"300","messageId":"301","endLine":11,"endColumn":36},{"ruleId":"298","severity":1,"message":"358","line":11,"column":38,"nodeType":"300","messageId":"301","endLine":11,"endColumn":52},{"ruleId":"298","severity":1,"message":"359","line":63,"column":16,"nodeType":"300","messageId":"301","endLine":63,"endColumn":23},{"ruleId":"313","severity":1,"message":"360","line":110,"column":44,"nodeType":"315","messageId":"316","endLine":110,"endColumn":46},{"ruleId":"306","severity":1,"message":"361","line":115,"column":8,"nodeType":"308","endLine":115,"endColumn":10,"suggestions":"362"},{"ruleId":"322","severity":1,"message":"323","line":174,"column":33,"nodeType":"319","endLine":174,"endColumn":117},{"ruleId":"317","severity":1,"message":"318","line":189,"column":37,"nodeType":"319","endLine":189,"endColumn":129},{"ruleId":"298","severity":1,"message":"363","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"335","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":18},{"ruleId":"298","severity":1,"message":"364","line":22,"column":11,"nodeType":"300","messageId":"301","endLine":22,"endColumn":19},{"ruleId":"306","severity":1,"message":"336","line":37,"column":8,"nodeType":"308","endLine":37,"endColumn":10,"suggestions":"365"},{"ruleId":"298","severity":1,"message":"356","line":9,"column":10,"nodeType":"300","messageId":"301","endLine":9,"endColumn":20},{"ruleId":"298","severity":1,"message":"357","line":9,"column":22,"nodeType":"300","messageId":"301","endLine":9,"endColumn":36},{"ruleId":"298","severity":1,"message":"358","line":9,"column":38,"nodeType":"300","messageId":"301","endLine":9,"endColumn":52},{"ruleId":"298","severity":1,"message":"359","line":22,"column":16,"nodeType":"300","messageId":"301","endLine":22,"endColumn":23},{"ruleId":"313","severity":1,"message":"360","line":59,"column":50,"nodeType":"315","messageId":"316","endLine":59,"endColumn":52},{"ruleId":"306","severity":1,"message":"361","line":63,"column":7,"nodeType":"308","endLine":63,"endColumn":9,"suggestions":"366"},{"ruleId":"322","severity":1,"message":"323","line":181,"column":33,"nodeType":"319","endLine":181,"endColumn":117},{"ruleId":"298","severity":1,"message":"363","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"363","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"335","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":18},{"ruleId":"306","severity":1,"message":"336","line":38,"column":8,"nodeType":"308","endLine":38,"endColumn":10,"suggestions":"367"},{"ruleId":"298","severity":1,"message":"368","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":18},{"ruleId":"298","severity":1,"message":"369","line":15,"column":12,"nodeType":"300","messageId":"301","endLine":15,"endColumn":17},{"ruleId":"298","severity":1,"message":"370","line":15,"column":19,"nodeType":"300","messageId":"301","endLine":15,"endColumn":27},{"ruleId":"298","severity":1,"message":"371","line":8,"column":10,"nodeType":"300","messageId":"301","endLine":8,"endColumn":18},{"ruleId":"298","severity":1,"message":"372","line":8,"column":51,"nodeType":"300","messageId":"301","endLine":8,"endColumn":58},{"ruleId":"298","severity":1,"message":"356","line":9,"column":10,"nodeType":"300","messageId":"301","endLine":9,"endColumn":20},{"ruleId":"298","severity":1,"message":"357","line":9,"column":22,"nodeType":"300","messageId":"301","endLine":9,"endColumn":36},{"ruleId":"298","severity":1,"message":"358","line":9,"column":38,"nodeType":"300","messageId":"301","endLine":9,"endColumn":52},{"ruleId":"298","severity":1,"message":"359","line":16,"column":16,"nodeType":"300","messageId":"301","endLine":16,"endColumn":23},{"ruleId":"306","severity":1,"message":"373","line":42,"column":8,"nodeType":"308","endLine":42,"endColumn":10,"suggestions":"374"},{"ruleId":"317","severity":1,"message":"318","line":56,"column":53,"nodeType":"319","endLine":56,"endColumn":78},{"ruleId":"322","severity":1,"message":"323","line":60,"column":33,"nodeType":"319","endLine":60,"endColumn":117},{"ruleId":"317","severity":1,"message":"318","line":92,"column":20,"nodeType":"319","endLine":92,"endColumn":84},{"ruleId":"317","severity":1,"message":"318","line":94,"column":20,"nodeType":"319","endLine":94,"endColumn":82},{"ruleId":"306","severity":1,"message":"375","line":122,"column":8,"nodeType":"308","endLine":122,"endColumn":10,"suggestions":"376"},{"ruleId":"322","severity":1,"message":"323","line":132,"column":21,"nodeType":"319","endLine":132,"endColumn":109},{"ruleId":"298","severity":1,"message":"377","line":9,"column":12,"nodeType":"300","messageId":"301","endLine":9,"endColumn":19},{"ruleId":"298","severity":1,"message":"346","line":10,"column":12,"nodeType":"300","messageId":"301","endLine":10,"endColumn":24},{"ruleId":"317","severity":1,"message":"378","line":68,"column":25,"nodeType":"319","endLine":68,"endColumn":36},{"ruleId":"298","severity":1,"message":"379","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"298","severity":1,"message":"363","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"380","line":8,"column":10,"nodeType":"300","messageId":"301","endLine":8,"endColumn":14},{"ruleId":"298","severity":1,"message":"341","line":10,"column":9,"nodeType":"300","messageId":"301","endLine":10,"endColumn":17},{"ruleId":"298","severity":1,"message":"342","line":10,"column":18,"nodeType":"300","messageId":"301","endLine":10,"endColumn":33},{"ruleId":"298","severity":1,"message":"343","line":10,"column":34,"nodeType":"300","messageId":"301","endLine":10,"endColumn":50},{"ruleId":"298","severity":1,"message":"344","line":10,"column":51,"nodeType":"300","messageId":"301","endLine":10,"endColumn":61},{"ruleId":"298","severity":1,"message":"345","line":10,"column":78,"nodeType":"300","messageId":"301","endLine":10,"endColumn":85},{"ruleId":"298","severity":1,"message":"346","line":36,"column":10,"nodeType":"300","messageId":"301","endLine":36,"endColumn":22},{"ruleId":"306","severity":1,"message":"381","line":128,"column":6,"nodeType":"308","endLine":128,"endColumn":8,"suggestions":"382"},{"ruleId":"322","severity":1,"message":"323","line":159,"column":13,"nodeType":"319","endLine":159,"endColumn":100},{"ruleId":"322","severity":1,"message":"323","line":207,"column":25,"nodeType":"319","endLine":207,"endColumn":68},{"ruleId":"322","severity":1,"message":"323","line":214,"column":25,"nodeType":"319","endLine":214,"endColumn":68},{"ruleId":"306","severity":1,"message":"307","line":43,"column":7,"nodeType":"308","endLine":43,"endColumn":9,"suggestions":"383"},{"ruleId":"298","severity":1,"message":"346","line":45,"column":12,"nodeType":"300","messageId":"301","endLine":45,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":88,"column":39,"nodeType":"386","messageId":"387","endLine":88,"endColumn":66,"fix":"388"},{"ruleId":"384","severity":1,"message":"385","line":95,"column":31,"nodeType":"386","messageId":"387","endLine":95,"endColumn":58,"fix":"389"},{"ruleId":"322","severity":1,"message":"323","line":104,"column":17,"nodeType":"319","endLine":104,"endColumn":99},{"ruleId":"306","severity":1,"message":"390","line":47,"column":8,"nodeType":"308","endLine":47,"endColumn":10,"suggestions":"391"},{"ruleId":"306","severity":1,"message":"392","line":24,"column":7,"nodeType":"308","endLine":24,"endColumn":9,"suggestions":"393"},{"ruleId":"317","severity":1,"message":"318","line":39,"column":20,"nodeType":"319","endLine":39,"endColumn":100},{"ruleId":"322","severity":1,"message":"323","line":56,"column":13,"nodeType":"319","endLine":56,"endColumn":98},{"ruleId":"317","severity":1,"message":"318","line":64,"column":13,"nodeType":"319","endLine":64,"endColumn":92},{"ruleId":"306","severity":1,"message":"336","line":33,"column":8,"nodeType":"308","endLine":33,"endColumn":10,"suggestions":"394"},{"ruleId":"306","severity":1,"message":"395","line":67,"column":7,"nodeType":"308","endLine":67,"endColumn":9,"suggestions":"396"},{"ruleId":"384","severity":1,"message":"385","line":78,"column":39,"nodeType":"386","messageId":"387","endLine":78,"endColumn":66,"fix":"397"},{"ruleId":"384","severity":1,"message":"385","line":86,"column":31,"nodeType":"386","messageId":"387","endLine":86,"endColumn":58,"fix":"398"},{"ruleId":"322","severity":1,"message":"323","line":111,"column":17,"nodeType":"319","endLine":111,"endColumn":99},{"ruleId":"298","severity":1,"message":"399","line":12,"column":10,"nodeType":"300","messageId":"301","endLine":12,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":15,"column":13,"nodeType":"319","endLine":15,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":52,"column":21,"nodeType":"319","endLine":52,"endColumn":111},{"ruleId":"298","severity":1,"message":"400","line":1,"column":8,"nodeType":"300","messageId":"301","endLine":1,"endColumn":13},{"ruleId":"298","severity":1,"message":"332","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":19},{"ruleId":"298","severity":1,"message":"401","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":18},{"ruleId":"298","severity":1,"message":"402","line":9,"column":7,"nodeType":"300","messageId":"301","endLine":9,"endColumn":16},{"ruleId":"298","severity":1,"message":"403","line":10,"column":7,"nodeType":"300","messageId":"301","endLine":10,"endColumn":14},{"ruleId":"322","severity":1,"message":"323","line":71,"column":41,"nodeType":"319","endLine":71,"endColumn":132},{"ruleId":"322","severity":1,"message":"323","line":84,"column":52,"nodeType":"319","endLine":84,"endColumn":133},{"ruleId":"298","severity":1,"message":"404","line":26,"column":12,"nodeType":"300","messageId":"301","endLine":26,"endColumn":16},{"ruleId":"384","severity":1,"message":"405","line":79,"column":51,"nodeType":"386","messageId":"387","endLine":79,"endColumn":100,"fix":"406"},{"ruleId":"384","severity":1,"message":"405","line":92,"column":46,"nodeType":"386","messageId":"387","endLine":92,"endColumn":70,"fix":"407"},{"ruleId":"322","severity":1,"message":"323","line":105,"column":17,"nodeType":"319","endLine":105,"endColumn":108},{"ruleId":"384","severity":1,"message":"405","line":122,"column":43,"nodeType":"386","messageId":"387","endLine":122,"endColumn":92,"fix":"408"},{"ruleId":"298","severity":1,"message":"380","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":14},{"ruleId":"306","severity":1,"message":"409","line":55,"column":8,"nodeType":"308","endLine":55,"endColumn":10,"suggestions":"410"},{"ruleId":"322","severity":1,"message":"323","line":89,"column":48,"nodeType":"319","endLine":89,"endColumn":141},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'Badge' is defined but never used.","'selectedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["413"],"'history' is assigned a value but never used.","'notifications' is assigned a value but never used.","'notification' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["414"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'logout' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'getFeedContent' and 'getUser'. Either include them or remove the dependency array.",["415"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'Accueil' is defined but never used.","'Header' is defined but never used.","'DatePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'getEvent'. Either include it or remove the dependency array.",["416"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'diffDate' is defined but never used.","'likePublication' is defined but never used.","'unLikePublicaton' is defined but never used.","'likeButton' is defined but never used.","'getUser' is defined but never used.","'errorMessage' is assigned a value but never used.","'now' is assigned a value but never used.","'owner' is assigned a value but never used.","'setOwner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getEventDetails', 'getEventPublications', and 'getUser'. Either include them or remove the dependency array.",["417"],"'publidata' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllType'. Either include it or remove the dependency array.",["418"],"'getCurrentUser' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'setPage' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'getAllType', 'getEvents', and 'nextPage'. Either include them or remove the dependency array.",["419"],"'moment' is defined but never used.","'formData' is assigned a value but never used.",["420"],["421"],["422"],"'register' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'faSearch' is defined but never used.","'faUsers' is defined but never used.","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has missing dependencies: 'getNbEventUser', 'getUser', 'getUserFollowers', and 'getUserPublications'. Either include them or remove the dependency array.",["424"],"'loading' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PostItem' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getNbEventUser', 'getPublications', and 'getUser'. Either include them or remove the dependency array.",["425"],["426"],"no-useless-computed-key","Unnecessarily computed property ['membres'] found.","Property","unnecessarilyComputedProperty",{"range":"427","text":"428"},{"range":"429","text":"428"},"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'getGroupes'. Either include it or remove the dependency array.",["431"],["432"],"React Hook useEffect has missing dependencies: 'connectedUser', 'getEvent', and 'getUsers'. Either include them or remove the dependency array.",["433"],{"range":"434","text":"428"},{"range":"435","text":"428"},"'PostHeader' is defined but never used.","'axios' is defined but never used.","'authHeader' is defined but never used.","'API_URL_2' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'user' is assigned a value but never used.","Unnecessarily computed property ['receiverdisplay'] found.",{"range":"436","text":"437"},{"range":"438","text":"437"},{"range":"439","text":"437"},"React Hook useEffect has a missing dependency: 'getRates'. Either include it or remove the dependency array.",["440"],"no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"447","fix":"455"},{"desc":"453","fix":"456"},{"desc":"447","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"441","fix":"464"},[2389,2400],"'membres'",[2580,2591],{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"447","fix":"469"},{"desc":"470","fix":"471"},[2158,2169],[2381,2392],[2247,2266],"'receiverdisplay'",[2567,2586],[3706,3725],{"desc":"472","fix":"473"},"Update the dependencies array to be: [getUsers]",{"range":"474","text":"475"},"Update the dependencies array to be: [getNotifications]",{"range":"476","text":"477"},"Update the dependencies array to be: [getFeedContent, getUser]",{"range":"478","text":"479"},"Update the dependencies array to be: [getEvent]",{"range":"480","text":"481"},"Update the dependencies array to be: [getEventDetails, getEventPublications, getUser]",{"range":"482","text":"483"},"Update the dependencies array to be: [getAllType]",{"range":"484","text":"485"},"Update the dependencies array to be: [getAllType, getEvents, nextPage]",{"range":"486","text":"487"},{"range":"488","text":"481"},{"range":"489","text":"487"},{"range":"490","text":"481"},"Update the dependencies array to be: [getEvents]",{"range":"491","text":"492"},"Update the dependencies array to be: [getNbEventUser, getUser, getUserFollowers, getUserPublications]",{"range":"493","text":"494"},"Update the dependencies array to be: [getNbEventUser, getPublications, getUser]",{"range":"495","text":"496"},{"range":"497","text":"475"},"Update the dependencies array to be: [getProfile]",{"range":"498","text":"499"},"Update the dependencies array to be: [getGroupes]",{"range":"500","text":"501"},{"range":"502","text":"481"},"Update the dependencies array to be: [connectedUser, getEvent, getUsers]",{"range":"503","text":"504"},"Update the dependencies array to be: [getRates]",{"range":"505","text":"506"},[1667,1669],"[getUsers]",[8303,8305],"[getNotifications]",[2686,2688],"[getFeedContent, getUser]",[839,841],"[getEvent]",[3529,3531],"[getEventDetails, getEventPublications, getUser]",[1849,1851],"[getAllType]",[4138,4140],"[getAllType, getEvents, nextPage]",[919,921],[2358,2360],[963,965],[1439,1441],"[getEvents]",[3541,3543],"[getNbEventUser, getUser, getUserFollowers, getUserPublications]",[3209,3211],"[getNbEventUser, getPublications, getUser]",[1071,1073],[1208,1210],"[getProfile]",[642,644],"[getGroupes]",[863,865],[1804,1806],"[connectedUser, getEvent, getUsers]",[1452,1454],"[getRates]"]